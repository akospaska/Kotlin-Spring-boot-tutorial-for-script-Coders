{"version":3,"sources":["InputComponent/InputComponent.js","InventoryElements/InventoryElement.js","App.js","index.js"],"names":["InputComponent","props","useState","inputValue","setInputValue","className","type","placeholder","value","onChange","e","target","onClick","newElementName","require","axios","method","url","headers","data","JSON","stringify","name","then","response","refreshPage","catch","error","console","log","InventoryElement","modifyCount","id","movement","itemDelete","deleteItem","count","App","apiResult","setApiResult","getInventoryList","fetch","text","result","parse","useEffect","map","a","b","ReactDOM","render","document","getElementById"],"mappings":"oLA+CeA,MA5Cf,SAAwBC,GACtB,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KA0BA,OACE,gCACE,qBAAKC,UAAU,WAAf,SACE,uBAAOC,KAAK,OAAOC,YAAY,YAAYC,MAAOL,EAAYM,SAAU,SAACC,GAAD,OAAON,EAAcM,EAAEC,OAAOH,YAExG,wBACEH,UAAU,YACVO,QAAS,WA/BO,IAACC,IAgCDV,EA/BRW,EAAQ,EAcpBC,CATa,CACXC,OAAQ,OACRC,IAAK,uDACLC,QAAS,CACP,eAAgB,oBAElBC,KAVSC,KAAKC,UAAU,CACxBC,KAAMT,MAaLU,MAAK,SAAUC,GACdvB,EAAMwB,iBAEPC,OAAM,SAAUC,GACfC,QAAQC,IAAIF,OASd,mBAJQ,IC7BVZ,EAAQD,EAAQ,GAkFLgB,MAhFf,SAA0B7B,GACxB,IAAM8B,EAAc,SAACC,EAAIC,GACvB,IAAId,EAAOC,KAAKC,UAAU,CACxBW,GAAIA,EACJC,SAAUA,IAWZlB,EARa,CACXC,OAAQ,OACRC,IAAK,qDACLC,QAAS,CACP,eAAgB,oBAElBC,KAAMA,IAGLI,MAAK,SAAUC,GACdI,QAAQC,IAAIT,KAAKC,UAAUG,EAASL,OACpClB,EAAMwB,iBAEPC,OAAM,SAAUC,GACfC,QAAQC,IAAIF,OAgCZO,EAAa,SAACF,IA5BD,SAACA,GAClB,IAAIb,EAAOC,KAAKC,UAAU,CACxBW,GAAIA,IAYNjB,EATa,CACXC,OAAQ,OACRC,IAAK,oDACLC,QAAS,CACP,eAAgB,oBAElBC,KAAMA,IAILI,MAAK,SAAUC,GACdvB,EAAMwB,iBAEPC,OAAM,SAAUC,GACfC,QAAQC,IAAIF,MAUhBQ,CAAWH,IAGb,OACE,qBAAoB3B,UAAU,mBAA9B,SACE,sBAAKA,UAAU,aAAf,UACE,qBAAIA,UAAU,0BAAd,UACGJ,EAAMqB,KADT,IACe,0CAAarB,EAAMmC,SAAc,IAC9C,sBAAK/B,UAAU,kBAAf,UACE,wBAAQA,UAAU,YAAYO,QAAS,kBAhB9BoB,EAgB8C/B,EAAM+B,QAfrED,EAAYC,EAAI,KADA,IAACA,GAgBT,eAEU,IACV,wBAAQ3B,UAAU,YAAYO,QAAS,kBAhB7BoB,EAgB8C/B,EAAM+B,QAftED,EAAYC,EAAI,KADC,IAACA,GAgBV,eAGA,wBAAQ3B,UAAU,YAAYO,QAAS,kBAAMsB,EAAWjC,EAAM+B,KAA9D,0BAKJ,qBAAK3B,UAAU,4BAhBTJ,EAAM+B,KCOLK,MA1Bf,WACE,MAAkCnC,mBAAS,IAA3C,mBAAOoC,EAAP,KAAkBC,EAAlB,KAEMC,EAAmB,WACvBC,MAAM,8CACHlB,MAAK,SAACC,GAAD,OAAcA,EAASkB,UAC5BnB,MAAK,SAACoB,GAAD,OAAYJ,EAAanB,KAAKwB,MAAMD,OACzCjB,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAI,QAASF,OAO3C,OAJAkB,qBAAU,WACRL,MACC,IAGD,sBAAKnC,UAAU,mBAAf,UACE,cAAC,EAAD,CAAgBoB,YAAa,kBAAMe,OACnC,qBAAKnC,UAAU,UAAU2B,GAAG,gBAA5B,SACGM,EAAUQ,KAAI,SAACC,EAAGC,GAAJ,OACb,cAAC,EAAD,CAAkBhB,GAAIe,EAAEf,GAAIV,KAAMyB,EAAEzB,KAAMc,MAAOW,EAAEX,MAAOX,YAAa,kBAAMe,gBCzDvFS,IAASC,OACP,cAAC,EAAD,IAEAC,SAASC,eAAe,W","file":"static/js/main.36094fd1.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nfunction InputComponent(props) {\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const addNewElement = (newElementName) => {\r\n    var axios = require('axios');\r\n    var data = JSON.stringify({\r\n      name: newElementName,\r\n    });\r\n\r\n    var config = {\r\n      method: 'post',\r\n      url: 'http://localhost:3005/inventoryactions/createnewItem',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      data: data,\r\n    };\r\n\r\n    axios(config)\r\n      .then(function (response) {\r\n        props.refreshPage();\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div key={1}>\r\n      <div className=\"ui input\">\r\n        <input type=\"text\" placeholder=\"Search...\" value={inputValue} onChange={(e) => setInputValue(e.target.value)} />\r\n      </div>\r\n      <button\r\n        className=\"ui button\"\r\n        onClick={() => {\r\n          addNewElement(inputValue);\r\n        }}\r\n      >\r\n        add\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InputComponent;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nvar axios = require('axios');\r\n\r\nfunction InventoryElement(props) {\r\n  const modifyCount = (id, movement) => {\r\n    var data = JSON.stringify({\r\n      id: id,\r\n      movement: movement,\r\n    });\r\n\r\n    var config = {\r\n      method: 'post',\r\n      url: 'http://localhost:3005/inventoryactions/modifycount',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      data: data,\r\n    };\r\n    axios(config)\r\n      .then(function (response) {\r\n        console.log(JSON.stringify(response.data));\r\n        props.refreshPage();\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const deleteItem = (id) => {\r\n    var data = JSON.stringify({\r\n      id: id,\r\n    });\r\n\r\n    var config = {\r\n      method: 'post',\r\n      url: 'http://localhost:3005/inventoryactions/deleteitem',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      data: data,\r\n    };\r\n\r\n    axios(config)\r\n      .then(function (response) {\r\n        props.refreshPage();\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n  const countPlus = (id) => {\r\n    modifyCount(id, '+');\r\n  };\r\n  const countMinus = (id) => {\r\n    modifyCount(id, '-');\r\n  };\r\n  const itemDelete = (id) => {\r\n    deleteItem(id);\r\n  };\r\n\r\n  return (\r\n    <div key={props.id} className=\"four wide column\">\r\n      <div className=\"ui segment\">\r\n        <h4 className=\"ui right floated header\">\r\n          {props.name} <span>Count:{props.count}</span>{' '}\r\n          <div className=\"buttonContainer\">\r\n            <button className=\"ui button\" onClick={() => countPlus(props.id)}>\r\n              +\r\n            </button>{' '}\r\n            <button className=\"ui button\" onClick={() => countMinus(props.id)}>\r\n              -\r\n            </button>\r\n            <button className=\"ui button\" onClick={() => itemDelete(props.id)}>\r\n              Delete\r\n            </button>\r\n          </div>\r\n        </h4>\r\n        <div className=\"ui clearing divider\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InventoryElement;\r\n","import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport InputComponent from './InputComponent/InputComponent';\n\nimport InventoryElement from './InventoryElements/InventoryElement';\n\nconst mockSrcFile = [\n  { name: 'sample object 1', count: 4, id: 1 },\n  { name: 'sample object 2', count: 1, id: 2 },\n  { name: 'sample object 3', count: 2, id: 3 },\n  { name: 'sample object 4', count: 11, id: 4 },\n  { name: 'sample object 1', count: 4, id: 5 },\n  { name: 'sample object 2', count: 1, id: 6 },\n  { name: 'sample object 3', count: 2, id: 7 },\n  { name: 'sample object 4', count: 11, id: 8 },\n];\n\n/*\nvar axios = require('axios');\nvar data = JSON.stringify({\n  \"title\": \"faszomat mÃ¡r\",\n  \"value\": 20\n});\n\nvar config = {\n  method: 'get',\n  url: 'http://localhost:3005/api/getinventorylist',\n  headers: { \n    'Content-Type': 'application/json'\n  },\n  data : data\n};\n\naxios(config)\n.then(function (response) {\n  console.log(JSON.stringify(response.data));\n})\n.catch(function (error) {\n  console.log(error);\n});\n\n\n*/\nfunction App() {\n  const [apiResult, setApiResult] = useState([]);\n\n  const getInventoryList = () => {\n    fetch('http://localhost:3005/api/getinventorylist')\n      .then((response) => response.text())\n      .then((result) => setApiResult(JSON.parse(result)))\n      .catch((error) => console.log('error', error));\n  };\n\n  useEffect(() => {\n    getInventoryList();\n  }, []);\n\n  return (\n    <div className=\"ui piled segment\">\n      <InputComponent refreshPage={() => getInventoryList()} />\n      <div className=\"ui grid\" id=\"mainContainer\">\n        {apiResult.map((a, b) => (\n          <InventoryElement id={a.id} name={a.name} count={a.count} refreshPage={() => getInventoryList()} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}